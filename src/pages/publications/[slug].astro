---
import { getCollection, render } from 'astro:content';
import ProjectLayout from '../../layouts/ProjectLayout.astro';

export async function getStaticPaths() {
  const publicationsEntries = await getCollection('publications');
  
  return publicationsEntries
    .filter(entry => !entry.data.draft) // Filtre les brouillons
    .map(entry => ({
      params: { slug: entry.id.replace(/\.md$/, '') },
      props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);
const description = entry.data.summary || entry.data.description;
---

<ProjectLayout
  title={entry.data.title}
  description={description}
>
  <a href="/publications" class="inline-flex items-center text-blue-600 hover:underline mb-4">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
    </svg>
    Retour aux publications
  </a>
  
  <article class="bg-white p-6 rounded-lg shadow-md">
    <div class="mb-6">
      {entry.data.publicationDate && (
        <p class="text-gray-700">
          <span class="font-semibold">Date de publication:</span> {entry.data.publicationDate}
        </p>
      )}
    </div>
    
    {entry.data.summary && (
      <div class="mb-6 bg-gray-50 p-4 rounded-lg">
        <p class="text-gray-700 italic">{entry.data.summary}</p>
      </div>
    )}
    
    <div class="prose max-w-none">
      <Content />
    </div>
  </article>
</ProjectLayout>
