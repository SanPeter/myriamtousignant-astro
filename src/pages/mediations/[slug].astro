---
import { getCollection } from 'astro:content';
import ProjectLayout from '../../layouts/ProjectLayout.astro';
import { Image } from 'astro:assets';
import { getImagesBySlug, getImageBySummaryPath } from '../../utils/contentImages';

export async function getStaticPaths() {
  const mediationsEntries = await getCollection('mediations');
  
  return mediationsEntries
    .filter(entry => !entry.data.draft) // Filtre les brouillons
    .map(entry => ({
      params: { slug: entry.id.replace(/\.md$/, '').split('/')[0] }, // Extraire le slug correctement
      props: { entry },
    }));
}

const { entry } = Astro.props;

// Extraire le slug à partir de l'ID
const slug = entry.id.includes('/') 
  ? entry.id.split('/')[0] 
  : entry.id.replace(/\.md$/, '');

// Récupérer toutes les images liées à ce contenu
const projectImages = await getImagesBySlug('mediations', slug);

// Préparer les images pour le carousel
const images = entry.data.projectImages ? 
  await Promise.all(entry.data.projectImages.map(async (path: string) => {
    return await getImageBySummaryPath('mediations', slug, path);
  })) : 
  projectImages;
---

<ProjectLayout
  title={entry.data.title}
  description={entry.data.description}
  images={images}
>
  <a href="/mediations" class="inline-flex items-center text-blue-600 hover:underline mb-4">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
    </svg>
    Retour aux médiations
  </a>
  
  <article class="bg-white p-6 rounded-lg shadow-md">
    {entry.data.date && (
      <p class="text-gray-700 mb-4">
        <span class="font-semibold">Date:</span> {entry.data.date.toLocaleDateString('fr-CA')}
      </p>
    )}
    
    <div class="prose max-w-none">
      {entry.body && <div set:html={entry.body} />}
    </div>
  </article>
</ProjectLayout>
