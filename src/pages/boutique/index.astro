---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

// Récupération des produits de la boutique
const boutiqueEntries = await getCollection('boutique');

// Filtre par disponibilité et tri par poids/date
const availableProducts = boutiqueEntries
  .filter(entry => !entry.data.draft && entry.data.available !== false) // Produits non brouillons et disponibles
  .sort((a, b) => {
    // D'abord par poids si disponible
    if (a.data.weight && b.data.weight) {
      return a.data.weight - b.data.weight;
    }
    // Sinon par date
    if (a.data.date && b.data.date) {
      return b.data.date.valueOf() - a.data.date.valueOf();
    }
    return 0;
  });
---

<BaseLayout title="Boutique">
  <div class="max-w-7xl mx-auto">
    <h1 class="text-4xl font-bold mb-8">Boutique</h1>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {availableProducts.map(product => (
        <a href={`/boutique/${product.id.replace(/\.md$/, '')}`} class="card hover:shadow-lg transition-shadow duration-200 bg-white rounded-lg overflow-hidden shadow">
          {product.data.summaryImage && (
            <img 
              src={product.data.summaryImage} 
              alt={product.data.title} 
              class="w-full h-48 object-cover"
            />
          )}
          <div class="p-4">
            <h2 class="text-xl font-semibold">{product.data.title}</h2>
            {product.data.price && (
              <p class="text-lg font-bold text-blue-600 mt-1">
                {product.data.price.toFixed(2)} $
              </p>
            )}
            {product.data.description && (
              <p class="mt-2 text-gray-700 line-clamp-3">{product.data.description}</p>
            )}
            <button class="mt-4 w-full bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 transition-colors">
              Voir les détails
            </button>
          </div>
        </a>
      ))}
    </div>
  </div>
</BaseLayout>
