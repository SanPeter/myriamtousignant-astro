---
import { getCollection, render } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import ImageGallery from '../../components/ImageGallery.astro';
import { Image } from 'astro:assets';
import { getImageBySummaryPath } from '../../utils/contentImages';

export async function getStaticPaths() {
  const expositionsEntries = await getCollection('expositions');
  
  return expositionsEntries
    .filter(entry => !entry.data.draft) // Filtre les brouillons
    .map(entry => ({
      params: { slug: entry.id.replace(/\.md$/, '').split('/')[0] }, // Extraire le slug correctement
      props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);

// Extraire le dossier de l'exposition à partir de l'ID
const expositionFolder = entry.id.includes('/') 
  ? entry.id.split('/')[0] 
  : entry.id.replace(/\.md$/, '');

// Récupérer l'image de résumé si elle existe
let summaryImage;
if (entry.data.summaryImage) {
  summaryImage = await getImageBySummaryPath('expositions', expositionFolder, entry.data.summaryImage);
}

// Récupérer les images du projet pour la galerie si elles existent
const galleryImages = entry.data.projectImages && entry.data.projectImages.length > 0
  ? await Promise.all(entry.data.projectImages.map(async (imagePath: string) => {
      return await getImageBySummaryPath('expositions', expositionFolder, imagePath);
    }))
  : [];
---

<BaseLayout title={entry.data.title}>
  <div class="max-w-4xl mx-auto">
    <a href="/expositions" class="inline-flex items-center text-blue-600 hover:underline mb-4">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
      </svg>
      Retour aux expositions
    </a>
    
    <article class="bg-white p-6 rounded-lg shadow-md">
      <h1 class="text-3xl font-bold mb-4">{entry.data.title}</h1>
      
      {summaryImage && (
        <Image 
          src={summaryImage} 
          alt={entry.data.title} 
          class="w-full max-h-96 object-contain mb-6"
          width={1200}
          height={800}
          format="webp"
          quality={85}
        />
      )}
      
      <div class="mb-6">
        {entry.data.startDate && (
          <p class="text-gray-700">
            <span class="font-semibold">Période:</span> {entry.data.startDate.toLocaleDateString('fr-CA')}
            {entry.data.endDate && ` au ${entry.data.endDate.toLocaleDateString('fr-CA')}`}
          </p>
        )}
        {entry.data.location && (
          <p class="text-gray-700">
            <span class="font-semibold">Lieu:</span> {entry.data.location}
          </p>
        )}
      </div>
      
      {entry.data.description && (
        <div class="mb-6">
          <h2 class="text-xl font-semibold mb-2">Description</h2>
          <p class="text-gray-700">{entry.data.description}</p>
        </div>
      )}
      
      <div class="prose max-w-none">
        <Content />
      </div>
      
      {galleryImages && galleryImages.length > 0 && (
        <ImageGallery images={galleryImages} title={entry.data.title} />
      )}
    </article>
  </div>
</BaseLayout>
